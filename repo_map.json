{
  "name": "big-mood-detector",
  "description": "Clinical-grade bipolar mood prediction from Apple Health data",
  "version": "0.4.0",
  "structure": {
    "src/big_mood_detector/": {
      "description": "Main application source code",
      "subdirs": {
        "domain/": {
          "description": "Core business logic (Clean Architecture)",
          "key_files": {
            "entities/": "SleepRecord, ActivityRecord, HeartRateRecord, Episode, Label",
            "services/": "SleepWindowAnalyzer, ActivitySequenceExtractor, CircadianRhythmCalculator",
            "value_objects/": "TimeRange, ClinicalThreshold, MoodType, Severity"
          }
        },
        "application/": {
          "description": "Use cases and orchestration",
          "key_files": {
            "use_cases/": "ProcessHealthDataUseCase, PredictMoodEnsembleUseCase",
            "services/": "LabelManagementService, FileWatcherService, ClinicalReportService"
          }
        },
        "infrastructure/": {
          "description": "External dependencies and implementations",
          "subdirs": {
            "parsers/": "JSON and XML parsers for health data",
            "ml_models/": "XGBoost and PAT model implementations",
            "repositories/": "SQLite, file-based, and in-memory storage",
            "fine_tuning/": "PersonalCalibrator, PopulationTrainer",
            "background/": "Celery task queue and workers"
          }
        },
        "interfaces/": {
          "description": "User and system interfaces",
          "subdirs": {
            "cli/": "Typer-based command line interface",
            "api/": "FastAPI REST endpoints"
          }
        },
        "core/": {
          "description": "Shared utilities and configuration",
          "key_files": {
            "config.py": "Application settings and environment",
            "exceptions.py": "Custom exception hierarchy",
            "logging.py": "Structured logging configuration"
          }
        }
      }
    },
    "model_weights/": {
      "description": "Pre-trained ML model weights (47MB total)",
      "subdirs": {
        "xgboost/converted/": "XGBoost models for depression, mania, hypomania",
        "pat/pretrained/": "PAT transformer weights (S/M/L variants)"
      }
    },
    "tests/": {
      "description": "Comprehensive test suite (695 tests, 91% coverage)",
      "subdirs": {
        "unit/": "Domain logic tests",
        "integration/": "Parser, DB, and API tests",
        "e2e/": "Full pipeline tests"
      }
    },
    "docs/": {
      "description": "Project documentation",
      "subdirs": {
        "user/": "End-user guides and tutorials",
        "developer/": "Technical documentation and API reference",
        "clinical/": "Clinical validation and DSM-5 alignment",
        "completed/": "Implementation records",
        "archive/": "Historical documentation",
        "literature/": "Research papers and clinical references"
      }
    },
    "reference_repos/": {
      "description": "Academic implementations from research papers",
      "key_repos": {
        "mood_ml/": "XGBoost implementation from Seoul National study",
        "Pretrained-Actigraphy-Transformer/": "PAT model from Dartmouth",
        "apple-health-bot/": "Apple Health XML parser",
        "tsfresh/": "Time series feature extraction"
      }
    },
    "data/": {
      "description": "User data directory (gitignored)",
      "subdirs": {
        "input/": "Place health data files here",
        "output/": "Processing results",
        "uploads/": "API upload directory",
        "temp/": "Temporary processing files"
      }
    },
    "scripts/": {
      "description": "Utility and maintenance scripts",
      "subdirs": {
        "experiments/": "Test and experimental scripts",
        "maintenance/": "Setup and conversion tools",
        "validation/": "Data validation scripts"
      }
    }
  },
  "key_commands": {
    "process": "Extract features from health data",
    "predict": "Generate mood predictions",
    "label": "Manage ground truth annotations",
    "train": "Fine-tune personalized models",
    "serve": "Start FastAPI server",
    "watch": "Monitor directories for new files"
  },
  "entry_points": {
    "cli": "python src/big_mood_detector/main.py",
    "api": "python src/big_mood_detector/main.py serve",
    "tests": "pytest",
    "quality": "make quality"
  },
  "dependencies": {
    "core": ["fastapi", "typer", "pydantic", "sqlalchemy"],
    "ml": ["xgboost", "tensorflow", "scikit-learn", "pandas"],
    "parsing": ["lxml", "orjson"],
    "monitoring": ["prometheus-client", "structlog"]
  },
  "configuration": {
    "environment_file": ".env",
    "settings_module": "src/big_mood_detector/core/config.py",
    "model_config": "model_weights/config.json"
  },
  "development_workflow": {
    "setup": "make setup",
    "test": "make test",
    "lint": "make lint",
    "format": "make format",
    "run": "make dev"
  }
}