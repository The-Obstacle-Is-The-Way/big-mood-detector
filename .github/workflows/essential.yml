name: Essential CI

on:
  push:
    branches: [development, staging, main]
  pull_request:
    branches: [development, staging, main]

env:
  PYTHON_VERSION: "3.12"

jobs:
  # Core quality gate - catches real breakage
  essential-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent infinite runs
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
      
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,ml]"
      
      - name: Lint & type check
        run: |
          make lint
          make type-check
      
      - name: Run fast tests only
        run: |
          # Skip slow integration tests for fast feedback
          pytest -q -n auto -m "not slow" --ignore=tests/integration/data_processing/test_real_data_integration.py

  # Branch-specific extras (only when justified)
  staging-validation:
    runs-on: ubuntu-latest
    needs: essential-checks
    if: github.ref == 'refs/heads/staging'
    timeout-minutes: 25
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,ml]"
      
      - name: Extended integration tests
        run: pytest tests/integration/ -v

  production-validation:
    runs-on: ubuntu-latest
    needs: essential-checks
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 20
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,ml]"
      
      - name: Security audit
        run: |
          pip install pip-audit
          pip-audit --desc --ignore-vuln GHSA-887c-mr87-cxwp  # torch DoS - acceptable risk
      
      - name: Validate Seoul feature schema
        run: python scripts/assert_feature_schema.py 